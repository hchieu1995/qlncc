class CommonFunc {

    static downloadBlob(file) {
        let contentType = "";
        if (file.fileType) {
            contentType = file.fileType;
        }
        else {
            if (file.fileName.toLocaleLowerCase().endsWith("pdf")) {
                contentType = "application/pdf"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("xlsx")) {
                contentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("xml")) {
                contentType = "application/xml"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("doc")) {
                contentType = "application/msword"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("docx")) {
                contentType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("ico")) {
                contentType = "image/vnd.microsoft.icon"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("jpeg") || file.fileName.toLocaleLowerCase().endsWith("jpg")) {
                contentType = "image/jpeg"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("png")) {
                contentType = "image/png"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("svg")) {
                contentType = "image/svg+xml"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("txt")) {
                contentType = "text/plain"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("xls")) {
                contentType = "application/vnd.ms-excel"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("zip")) {
                contentType = "application/zip"
            }
            else if (file.fileName.toLocaleLowerCase().endsWith("gz")) {
                contentType = "application/gzip"
            }
        }
        let f = null;
        f = this.b64toBlob(file.fileData, contentType);

        const downloadAncher = document.createElement("a");
        downloadAncher.style.display = "none";

        const fileURL = URL.createObjectURL(f);
        downloadAncher.href = fileURL;
        downloadAncher.download = file.fileName;
        downloadAncher.click();
        return;
    }

    static b64toBlob(fileData, contentType) {
        contentType = contentType || '';
        var sliceSize = 1024;
        fileData = fileData.replace(/^[^,]+,/, '');
        fileData = fileData.replace(/\s/g, '');
        var byteCharacters = window.atob(fileData);
        var byteArrays = [];

        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
            var slice = byteCharacters.slice(offset, offset + sliceSize);

            var byteNumbers = new Array(slice.length);
            for (var i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }

            var byteArray = new Uint8Array(byteNumbers);

            byteArrays.push(byteArray);
        }

        var blob = new Blob(byteArrays, { type: contentType });
        return blob;
    }
}